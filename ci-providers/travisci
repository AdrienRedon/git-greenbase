#!/bin/bash

if [[ ${GREENBASE_DEBUG-false} != false ]]; then
  set -x
fi

# -- Assumptions
# $branch has been set by the caller
# $provider has been set by the caller
# $curl is executable
# $jq is executable
# get_config is a function exported by the caller

set -e  # <- Exit on non-zero exit status
apiVersion=3
token=$(get_config "${provider}.token")
repoId=$(get_config "${provider}.repoId")
serverUri=$(get_config "${provider}.serverUri")
set +e

request_travisci_response() {
  [[ $# -ne 1 ]] && { fail "Missing relative uri for querying Travis CI"; }
  relativeUri=$1

  $curl --silent \
    --header "Travis-API-Version: ${apiVersion}" \
    --header "User-Agent: git-greenbase" \
    --header "Authorization: token ${token}" \
    "${serverUri}/${relativeUri}"
}

response=$(request_travisci_response "repo/$repoId/builds?branch.name=${branch}&limit=1&build.state=passed")
if [[ -z $response ]]; then
  fail "Error querying Travis CI"
fi

hash=$(echo $response | $jq --raw-output '.builds[0].commit.sha')
if [[ -z $hash ]]; then
  fail "Error parsing results"
fi

echo $hash

