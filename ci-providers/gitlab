#!/bin/bash

if [[ ${GREENBASE_DEBUG-false} != false ]]; then
  set -x
fi

# -- Assumptions
#  $branch has been set by the caller
#  $provider has been set by the caller
#  $curl is executable
#  $jq is executable
#  get_config is a function exported by the caller

set -e  # <- Exit on non-zero exit status
apiVersion=v4
token=$(get_config "${provider}.token")
projectId=$(get_config "${provider}.projectId")
serverUri=$(get_config "${provider}.serverUri")
set +e

request_gitlab_project_response() {
  [[ $# -ne 1 ]] && { echo "Missing relative uri for querying Gitlab" >&2; exit 1; }
  relativeUri=$1
  $curl --silent \
    --header "PRIVATE-TOKEN: ${token}" \
    --header "User-Agent: git-greenbase" \
    "${serverUri}/api/${apiVersion}/projects/${projectId}/${relativeUri}"
}

response=$(request_gitlab_project_response "pipelines?status=success&scope=finished&ref=${branch}")
if [[ -z $response ]]; then
  echo "Error querying gitlab" >&2;
  exit 1
fi

hash=$(echo $response | $jq --raw-output '.[0].sha')
if [[ -z $hash ]]; then
  echo "Error parsing results" >&2;
  exit 1
fi

echo $hash

